version: 2.1

orbs:
  virtuaexecutors: virtuaorbs/executors@0.1.0
  virtuacommands: virtuaorbs/commands@0.3.0

jobs:
  tests-job:
    docker:
      - image: circleci/ruby:3.0.3
      - image: mongo:5.0.12
    steps:
      - virtuacommands/run-test-suites
  docker-job:
    docker:
      - image: cimg/base:2022.06
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Authenticate on Docker HUB from environment variable
          command: echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
      - run:
          name: Set the version to be used in later steps
          command: export DATETIME=`date +%Y-%m-%d_%H.%M.%S` && echo "export VERSION=${DATETIME}" >> $BASH_ENV
      - run:
          name: Build the docker image from the Dockerfile
          command: docker build -t ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:${VERSION} -f deployment/Dockerfile .
      - run:
          name: Push the image to Docker HUB
          command: docker push ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:${VERSION}
  deployment-job:
    docker:
      - image: cimg/base:2022.06
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - kube/install-kubectl
      - kube/install-kubeconfig
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Authenticate on Docker HUB from environment variable
          command: echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
      - run:
          name: Store tags in a JSON file
          command: curl https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/${DOCKER_REPOSITORY}/tags -o tags.json
      - run:
          name: Add trace to ensure that validation is ok and to display latest tag for Docker
          command: export LAST_VERSION=$(cat tags.json | jq .results | jq .[0] | jq .name) && echo "export VERSION=${LAST_VERSION}" >> $BASH_ENV
      - run:
          name: Create the deployment on the production cluster
          command: sed -e "s/<VERSION>/${VERSION}/g" deployment/kubernetes/deployment.yml | kubectl apply -f -

workflows:
  version: 2.1
  build:
    jobs:
      - docker-job
      - deployment-approval:
          type: approval
          requires:
            - docker-job
      - deployment-job:
          requires:
            - deployment-approval